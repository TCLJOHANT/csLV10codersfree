            //MIGRACIONES\\
php artisan migrate ==  realizar migracion
php artisan migrate:roolback ==revertir la ultima migracion
php artisan migrate:fresh == deshace todas las migraciones anteriores (no importa si metodo down (eliminacion de tabla) esta incorrecto o no existe)
                            y luego ejecuta todas las migraciones nuevamente 
                            eliminando todas las tablas y datos de la base de datos.
php artisan migrate:refresh == deshace todas las migraciones anteriores (si metododown (eliminacion de tabla) esta incorrecto o no existe no la elimina)
                            y luego ejecuta todas las migraciones nuevamente 
                            eliminando todas las tablas y datos de la base de datos. 
                            ademàs de Ejecuta los seeders (si los tiene) para poblar la base de datos .
php artisan migrate:reset == es utilizado para deshacer todas las migraciones y eliminar las tablas y
                             datos creados por ellas en la base de datos. (solo revierte las migraciones ejecutadas a través de Laravel, no afecta a ninguna otra tabla o datos que no estén relacionados con las migraciones.)
 //seeders
php artisan db:seed es utilizado para ejecutar los seeders de la base de datos en Laravel, lo que permite insertar datos 
                        de prueba o semilla en la base de datos de manera automatizada


            SOLUCION DE CARGA EXTENCION MSTRING (necesaria para pasar seedera a base de datos)
                Instala la extensión mbstring utilizando el administrador de paquetes de tu sistema operativo. Por ejemplo, en Ubuntu puedes ejecutar 
                sudo apt-get install php-mbstring y en CentOS puedes ejecutar sudo yum install php-mbstring.

    Php artisan migrate:flesh --seed == ejecuta fresh luego seed

    // ELOQUEND \\

/:consultas simples
    App\Models\Banda;
    $banda = Banda::all(); //imprimir tosdos los registros en una coleccion
    $bandas = Banda::where('categoria','trap')->get(); //registros filtrados por categoria
    $bandas = Banda::where('categoria','trap')->orderBy('id','desc')->get(); //sacar registro en orden desentente y filtrado por categoria
    $bandas = Banda::where('categoria','trap')->orderBy('name','asc')->get(); //registros en orden acendente por name
    $bandas = Banda::where('categoria','trap')->orderBy('name','asc')->first(); //devuelve primer registro no mas
    $bandas = Banda::Select('name','categoria')->get(); //devolver solo algunos atributos (campos)
    $bandas = Banda::Select('name as title','categoria')->orderBy('name','asc')->where('categoria','trap')->get(); //cambiando nombre de un campo
    $bandas = Banda::Select('name as title','categoria')->orderBy('name','asc')->where('categoria','trap')->take(2)->get(); //vevolviendo solo 2 registros
    $bandas = Banda::where('name','NEFFEX')->first(); //vevolver registro con name especifico
    $bandas = Banda::find(4); //devuelve registro con determinado id es lo mismo que ($bandas = Banda::where('id','4')->first();) pero laravle proporcion aesta facilidad.
        
/consultas mas complejas
    $bandas = Banda::where('id','>','10')->get(); //debuelve registros con id mayor a 10
    $bandas = Banda::where('categoria','like','%ra%')->get(); //devuelve todos los registros de la tabla Banda cuya columna categoria contenga la subcadena "ra". 



'#%J.A.C.A88COntR@Cna~'




@robertjota
@robertjota
hace 1 año
a mi no me funcionaba como en el video, estoy usando laravel 9 y según la documentación debes cambiar esta linea de codigo:
return new Attribute(
por esta
return Attribute::make (
y asi me funciono muy bien, espero le sirva a los demás, saludos 